@model RP.Entities.AccountModule.ViewModels.UserSignUpViewModel

@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">Rejestracja</h2>

<div>
    @Html.ActionLink("Powrót do strony głównej", "Index", "Home", null, new { @class = "btn btn-dark" })
</div> <hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

       <div class="form-horizontal" style="padding-left: 40%">

           @Html.ValidationSummary(true, "", new { @class = "text-danger" })
           <div class="form-group">
               @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
               <div class="col-md-10">
                   @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
               </div>
           </div>

           <div class="form-group">
               @Html.LabelFor(model => model.EmailConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
               <div class="col-md-10">
                   @Html.EditorFor(model => model.EmailConfirm, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.ValidationMessageFor(model => model.EmailConfirm, "", new { @class = "text-danger" })
               </div>
           </div>

           <div class="form-group">
               @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
               <div class="col-md-10">
                   @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                   @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
               </div>
           </div>

           <div class="form-group">
               @Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
               <div class="col-md-10">
                   @Html.PasswordFor(model => model.PasswordConfirm, new { @class = "form-control" })
                   @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
               </div>
           </div>

           <div class="form-group">
               @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
               <div class="col-md-10">
                   @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
               </div>
           </div>

           <div class="form-group">
               @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
               <div class="col-md-10">
                   @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
               </div>
           </div>

           <div class="form-group">
               <div class="col-md-10">
                   @Html.CheckBoxFor(model => model.TermsOfUse) Akceptuję @Html.ActionLink("Regulamin", "TermOfUse") w celu korzystania z bezpłatnego konta w portalu rekrutacyjnym.
                   @Html.ValidationMessageFor(model => model.TermsOfUse, "", new { @class = "text-danger" })
               </div>
           </div>

           <div class="form-group">
               <div class="col-md-offset-2 col-md-10">
                   <input type="submit" value="Zarejestruj" class="btn btn-dark" />
               </div>
           </div>
       </div>
}