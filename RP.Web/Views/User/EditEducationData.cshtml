@using RP.Entities.UserModule.ViewModels

@model RP.Entities.UserModule.ViewModels.EducationDataViewModel
@{
    ViewBag.Title = "Edukacja";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <h3> Informacje o kandydacie </h3>
    <div class="form-horizontal">
        <h4>Edukacja</h4>
        <hr />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.DropDownListFor(model => model.selectedId, new SelectList(Model.educationList, "Id", "NameOfSchool"), "Wybierz element do edycji", new { @class = "form-control" })
        </div>
    </div>

    <button name="action" value="edit">Edytuj wpis</button>


    @*<div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.DropDownListFor(model => model.EducationLevelId, new SelectList(Model.eduLevels, "Id", "Name"), "Wybierz poziom wykształcenia", new { @class = "form-control" })
        </div>
    </div>*@


    <div class="form-group">

        @Html.LabelFor(model => model.EducationLevelName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EducationLevelName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EducationLevelName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.NameOfSchool, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NameOfSchool, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NameOfSchool, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.Minor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Minor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Minor, "", new { @class = "text-danger" })
        </div>
    </div>

    <button name="action" value="add">Dodaj</button>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zaktualizuj dane" class="btn btn-default" />
        </div>
    </div>

    <button name="action" value="delete">Usuń wpis</button>

}